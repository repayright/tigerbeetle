name: "Release (latest)"

on:
  workflow_dispatch:

  workflow_call:
    secrets:
      TIGERBEETLE_NODE_PUBLISH_KEY:
        required: true
      TIGERBEETLE_DOCS_PUBLISH_KEY:
        required: true
      NUGET_KEY:
        required: true
      MAVEN_GPG_SECRET_KEY:
        required: true
      MAVEN_CENTRAL_USERNAME:
        required: true
      MAVEN_CENTRAL_TOKEN:
        required: true
      MAVEN_GPG_SECRET_KEY_PASSWORD:
        required: true
      TIGERBEETLE_GO_DEPLOY_KEY:
        required: true
      SLACK_TOKEN:
        required: true
    inputs:
      version:
        required: false
        type: string

jobs:
  version:
    outputs:
      version: ${{ steps.calculate_version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: calculate_version
      # The below is not a typo. The package yq installs the xq we need, not
      # to be confused with the package xq which is something different.
      run: |
        pip install yq && \
        echo "version=$(./.github/ci/next_version.sh)" >> "$GITHUB_OUTPUT"
  
  draft_release:
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - uses: actions/checkout@v3

      # Explicitly pass in the sha, even though it's very likely to be HEAD.
      - run: |
          hub release create \
            --prerelease \
            --draft \
            --message "$(./.github/ci/generate_release_message.sh ${{ needs.version.outputs.version }})" \
            -t ${{ github.sha }} \
            "${{ needs.version.outputs.version }}"

        # Propagate token into environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Even though the release job has an on: release trigger, actions taken by GITHUB_TOKEN
  # don't trigger this, so we call it here
  # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
  release:
    needs: [draft_release, version]
    uses: ./.github/workflows/release_artifacts.yml
    with:
      version: ${{needs.version.outputs.version}}
    secrets:
      TIGERBEETLE_NODE_PUBLISH_KEY: ${{secrets.TIGERBEETLE_NODE_PUBLISH_KEY}}
      NUGET_KEY: ${{secrets.NUGET_KEY}}
      MAVEN_GPG_SECRET_KEY: ${{ secrets.MAVEN_GPG_SECRET_KEY }}
      MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
      MAVEN_GPG_SECRET_KEY_PASSWORD: ${{ secrets.MAVEN_GPG_SECRET_KEY_PASSWORD }}
      TIGERBEETLE_GO_DEPLOY_KEY: ${{ secrets.TIGERBEETLE_GO_DEPLOY_KEY }}

  finalize_release:
    runs-on: ubuntu-latest
    needs: [release, version]
    steps:
      - uses: actions/checkout@v3

      - run: |
          hub release edit \
            --draft=false \
            -m "" \
            "${{ needs.version.outputs.version }}"

        # Propagate token into environment
        env:
          EDITOR: vi
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    needs: [release, version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: ./.github/ci/publish_docs.sh
        env:
          TIGERBEETLE_COMMIT: ${{needs.version.outputs.version}}
          TIGERBEETLE_DOCS_DEPLOY_KEY: ${{ secrets.TIGERBEETLE_DOCS_DEPLOY_KEY }}

  alert_failure:
    runs-on: ubuntu-latest
    needs: [version, draft_release, release, finalize_release, docs]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: Alert if anything failed
        run: |
          export URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" && \
          curl -d "text=Release process for ${{ inputs.version }} failed! See ${URL} for more information." -d "channel=C04RWHT9EP5" -H "Authorization: Bearer ${{ secrets.SLACK_TOKEN }}" -X POST https://slack.com/api/chat.postMessage
