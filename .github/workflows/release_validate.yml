name: "Release (validate)"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Docker and GH releases reflect instantly. As does the Go client (since it's just a repo).
      - name: Check Docker Image
        run: docker pull ghcr.io/tigerbeetle/tigerbeetle:${{ inputs.version }}

      - name: Check Debug Docker Image
        run: docker pull ghcr.io/tigerbeetle/tigerbeetle:${{ inputs.version }}-debug

      - name: Check Release Binaries
        run: |
          gh release view ${{ inputs.version }} --json assets > /tmp/release.json && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-windows-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-windows-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-linux-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-x86_64-linux-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-universal-macos-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-universal-macos-${{ inputs.version }}--debug.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-aarch64-linux-${{ inputs.version }}.zip")' | grep "uploaded") && \
          (cat /tmp/release.json | jq '.assets[] | select(.name=="tigerbeetle-aarch64-linux-${{ inputs.version }}--debug.zip")' | grep "uploaded")

        # Propagate token into environment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Client Go
        run: |
          mkdir -p /tmp/go && cd /tmp/go && \
          go mod init test && \
          go mod edit -require github.com/tigerbeetledb/tigerbeetle-go@v${{ inputs.version }} && \
          go mod tidy

      # Java, Node and Dotnet might take a bit to reflect.
      - name: Check Client Java
        run: |
          mkdir -p /tmp/java && \
          cat src/clients/java/validation_pom.xml | sed 's|{{VERSION}}|${{ inputs.version }}|' > /tmp/java/pom.xml && \
          cd /tmp/java && \
          mvn dependency:copy-dependencies || \
          (sleep 30 && mvn -U dependency:copy-dependencies) || \
          (sleep 60 && mvn -U dependency:copy-dependencies) || \
          (sleep 60 && mvn -U dependency:copy-dependencies) || \
          (sleep 120 && mvn -U dependency:copy-dependencies) || \
          (sleep 180 && mvn -U dependency:copy-dependencies) || \
          (sleep 300 && mvn -U dependency:copy-dependencies) || \
          (sleep 600 && mvn -U dependency:copy-dependencies) || \
          (sleep 1200 && mvn -U dependency:copy-dependencies)

      - name: Check Client Node
        run: |
          mkdir -p /tmp/node && cd /tmp/node && \
          npm install tigerbeetle-node@${{ inputs.version }} || \
          (sleep 30 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 60 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 60 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 120 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 180 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 300 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 600 && npm install tigerbeetle-node@${{ inputs.version }}) || \
          (sleep 1200 && npm install tigerbeetle-node@${{ inputs.version }})

      - name: Check Client Dotnet
        run: |
          mkdir -p /tmp/dotnet && cd /tmp/dotnet && \
          dotnet new console && \
          dotnet add package tigerbeetle --version ${{ inputs.version }} || \
          (sleep 30 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 60 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 60 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 120 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 180 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 300 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 600 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }}) || \
          (sleep 1200 && dotnet nuget locals all --clear && dotnet add package tigerbeetle --version ${{ inputs.version }})
